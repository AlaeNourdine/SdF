/* Failure type for quality-based models */
domain FailType {OK, LOST, ERR}

/* Basic class for non repairable components */
class OutComponent
	/* state of the component initially OK */
	FailType vState (init = OK);
	/* output of the component */
	FailType out (reset = OK);
	/* failure event for erroneous failure mode */ 
	event evErr (delay = exponential(pLambdaErr));
	/* failure event for lost failure mode */ 
	event evLost (delay = exponential(pLambdaLost));
	/* failure rates */
	parameter Real pLambdaErr = 1.0e-6;
	parameter Real pLambdaLost = 1.0e-5;
  	transition
		/* if the component is correct, when the err event occurs then the component becomes erroneous */
    	evErr: (vState == OK) -> vState := ERR ;
		/* if the component is correct, when the lost event occurs then the component becomes lost */
		evLost: (vState == OK) -> vState := LOST ;
  	assertion
		/* if the component is erroneous (resp. lost) then its output data is erroneous (resp. lost)
		otherwise the output is correct */
		out := vState;
end

/* Basic class for non repairable components with an input */
class InOutComponent
/* state of the component initially OK */
	FailType vState (init = OK);
	/* input and output of the component */
	FailType in, out (reset = OK);
	/* failure event for erroneous failure mode */ 
	event evErr (delay = exponential(pLambdaErr));
	/* failure event for lost failure mode */ 
	event evLost (delay = exponential(pLambdaLost));
	/* failure rates */
	parameter Real pLambdaErr = 1.0e-6;
	parameter Real pLambdaLost = 1.0e-5;
  	transition
		/* if the component is correct, when the err event occurs then the component becomes erroneous */
    	evErr:  (vState == OK)-> vState := ERR ;
		/* if the component is correct, when the lost event occurs then the component becomes lost */
		evLost: (Vstate == OK) -> Vstate := LOST ;
	assertion
		/* if the component is erroneous (resp. lost) then its output data is erroneous (resp. lost)
		otherwise the output status is the one of the input */
		out := switch {
			case (vState == ERR): ERR
			case (vState == LOST): LOST
			default : in} ;
end
